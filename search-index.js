var searchIndex = new Map(JSON.parse('[\
["tf_format",{"doc":"","t":"FFPFFPGFIFPFPFPPGFPFFFPNOONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNOONOONNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOON","n":["Angle","AxisAngle","AxisAngle","CoordTransform","Euler","Euler","EulerAxis","EulerAxisOrder","Length","MaybeTransform","Pitch","Quaternion","Quaternion","Rodrigues","Rodrigues","Roll","Rotation","RotationMatrix","RotationMatrix","Transform","TransformSet","Translation","Yaw","abs_diff_eq","angle","angles","as_degrees_value","as_radians_value","axis","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","contains_coord","default","default_epsilon","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dst","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_char","from_degrees","from_json_dir","from_json_file","from_radians","from_str","from_str","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get","hash","hash","ijkw","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_axis_angle_format","into_axis_angle_format","into_degrees","into_degrees","into_degrees","into_degrees","into_euler_format","into_euler_format","into_quaternion_format","into_quaternion_format","into_radians","into_radians","into_radians","into_radians","into_rodrigues_format","into_rodrigues_format","into_rotation_matrix_format","into_rotation_matrix_format","inverse","inverse","inverse","inverse","inverse","inverse","inverse","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","matrix","merge","new","normalize","normalize","normalize","normalize","normalize","normalize_rotation","order","params","partial_cmp","r","r","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","src","t","t","tf","to_char","to_degrees","to_na_isometry3","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_radians","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_iter","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit","value","zero"],"q":[[0,"tf_format"],[372,"noisy_float::types"],[373,"core::cmp"],[374,"core::result"],[375,"serde::de"],[376,"anyhow"],[377,"core::fmt"],[378,"core::fmt"],[379,"simba::scalar::real"],[380,"num_traits::cast"],[381,"num_traits::cast"],[382,"nalgebra::geometry::isometry_alias"],[383,"nalgebra::geometry::translation_alias"],[384,"std::path"],[385,"core::convert"],[386,"core::option"],[387,"core::hash"],[388,"serde::ser"],[389,"alloc::string"],[390,"core::iter::traits::collect"],[391,"core::any"]],"d":["","Rotation represented in axis-angle format.","","Represent coordinate transformation in 3D Euclidean space.","Rotation represented as Euler angles.","","","","","Represent either a rigid transformation or a rotation in 3D","","Rotation represented as a quaternion.","","Rotation represented in Rodrigues format.","","","Generic rotation data type.","","","Represent a rigid transformation in 3D Euclidean space.","Represent a set of related or disjoint coordinate â€¦","Represent a translation in 3D Euclidean space.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[0,0,4,0,0,4,0,0,0,0,11,0,4,0,4,11,0,0,4,0,0,0,11,1,7,5,1,1,7,4,5,6,7,8,9,10,11,12,13,14,15,16,1,4,5,6,7,8,9,10,11,12,13,14,15,16,1,4,5,6,7,8,9,10,11,12,13,14,15,16,1,4,5,6,7,8,9,10,11,12,13,14,15,16,1,1,1,15,15,1,4,5,6,7,8,9,10,11,12,13,14,15,16,1,16,10,11,1,10,10,10,11,11,11,1,1,1,4,5,6,7,8,9,10,11,12,13,14,15,16,1,4,4,4,4,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9,10,11,12,12,13,13,13,14,14,15,16,1,11,1,15,15,1,10,1,4,5,6,7,8,9,10,11,12,13,14,15,16,1,15,10,11,6,15,4,5,6,7,8,9,10,11,12,13,14,15,16,1,4,12,4,5,7,12,4,12,4,12,4,5,7,12,4,12,4,12,4,5,6,7,8,9,12,4,5,6,7,8,9,10,11,12,13,14,15,16,1,8,15,15,4,5,7,9,1,12,5,9,1,12,13,4,5,6,7,8,9,10,11,12,13,14,15,16,1,16,12,13,16,11,1,13,4,5,6,7,8,9,10,11,12,13,14,15,16,1,1,10,1,4,5,6,7,8,9,10,11,12,13,14,15,16,1,4,5,6,7,8,9,10,11,12,13,14,15,16,1,4,4,5,6,7,8,9,10,11,12,12,13,14,15,16,1,15,4,5,6,7,8,9,10,11,12,13,14,15,16,1,4,5,6,7,8,9,10,11,12,13,14,15,16,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1,-1],2,[]],0,0,[1,3],[1,3],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[1,1],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[1,1],18],[[-1,-2],18,[],[]],[[15,19],2],[[],15],[[],-1,[]],[-1,[[20,[4]]],21],[-1,[[20,[5]]],21],[-1,[[20,[6]]],21],[-1,[[20,[7]]],21],[-1,[[20,[8]]],21],[-1,[[20,[9]]],21],[-1,[[22,[10]]],21],[-1,[[20,[11]]],21],[-1,[[20,[12]]],21],[-1,[[20,[13]]],21],[-1,[[20,[14]]],21],[-1,[[20,[15]]],21],[-1,[[20,[16]]],21],[-1,[[20,[1]]],21],0,[[10,10],2],[[11,11],2],[[1,1],2],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[4,23],24],[[5,23],24],[[6,23],24],[[7,23],24],[[8,23],24],[[9,23],24],[[10,23],24],[[11,23],24],[[12,23],24],[[13,23],24],[[14,23],24],[[15,23],24],[[16,23],24],[[1,23],24],[[[25,[-1]]],4,[26,27]],[9,4],[6,4],[7,4],[8,4],[5,4],[-1,-1,[]],[4,5],[[[25,[-1]]],5,[26,28]],[-1,-1,[]],[-1,-1,[]],[[[25,[-1]]],6,[26,28,29]],[4,6],[[[25,[-1]]],7,[26,27,29]],[-1,-1,[]],[4,7],[-1,-1,[]],[[[25,[-1]]],8,[26,27,29]],[4,8],[[[25,[-1]]],9,[26,27]],[-1,-1,[]],[4,9],[-1,-1,[]],[-1,-1,[]],[[[30,[-1]]],12,[26,27]],[-1,-1,[]],[-1,-1,[]],[12,13],[4,13],[-1,-1,[]],[[[31,[-1]]],14,[26,27]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[32,[[22,[11]]]],[3,1],[-1,[[22,[15]]],[[34,[33]]]],[-1,[[22,[15]]],[[34,[33]]]],[3,1],[19,[[22,[10,-1]]],[]],[19,[[20,[1,-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[15,19,19],[[36,[[30,[35]]]]]],[[10,-1],17,37],[[11,-1],17,37],0,[[15,19,19,[30,[35]]],[[20,[17,0]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,4],[12,12],[4,4],[5,5],[7,7],[12,12],[4,4],[12,12],[4,4],[12,12],[4,4],[5,5],[7,7],[12,12],[4,4],[12,12],[4,4],[12,12],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[12,12],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,[[15,15],15],[[],15],[4,4],[5,5],[7,7],[9,9],[1,1],[12,12],0,0,[[1,1],[[36,[18]]]],0,0,[[4,-1],20,38],[[5,-1],20,38],[[6,-1],20,38],[[7,-1],20,38],[[8,-1],20,38],[[9,-1],20,38],[[10,-1],22,38],[[11,-1],20,38],[[12,-1],20,38],[[13,-1],20,38],[[14,-1],20,38],[[15,-1],20,38],[[16,-1],20,38],[[1,-1],20,38],0,0,0,0,[11,32],[1,1],[13,[[30,[-1]]],[26,27]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[10,39],[1,39],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[13,[[20,[4,-1]]],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[13,[[20,[12,-1]]],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[15,0]]],[[41,[],[[40,[16]]]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],0,0,[[],1]],"c":[],"p":[[5,"Angle",0],[1,"bool"],[8,"R64",372],[6,"Rotation",0],[5,"Euler",0],[5,"Quaternion",0],[5,"AxisAngle",0],[5,"RotationMatrix",0],[5,"Rodrigues",0],[5,"EulerAxisOrder",0],[6,"EulerAxis",0],[5,"Transform",0],[5,"MaybeTransform",0],[5,"Translation",0],[5,"TransformSet",0],[5,"CoordTransform",0],[1,"tuple"],[6,"Ordering",373],[1,"str"],[6,"Result",374],[10,"Deserializer",375],[8,"Result",376],[5,"Formatter",377],[8,"Result",377],[8,"UnitQuaternion",378],[10,"RealField",379],[10,"NumCast",380],[10,"ToPrimitive",380],[10,"Clone",381],[8,"Isometry3",382],[8,"Translation3",383],[1,"char"],[5,"Path",384],[10,"AsRef",385],[1,"f64"],[6,"Option",386],[10,"Hasher",387],[10,"Serializer",388],[5,"String",389],[17,"Item"],[10,"IntoIterator",390],[5,"TypeId",391]],"b":[[131,"impl-From%3CUnit%3CQuaternion%3CT%3E%3E%3E-for-Rotation"],[132,"impl-From%3CRodrigues%3E-for-Rotation"],[133,"impl-From%3CQuaternion%3E-for-Rotation"],[134,"impl-From%3CAxisAngle%3E-for-Rotation"],[135,"impl-From%3CRotationMatrix%3E-for-Rotation"],[136,"impl-From%3CEuler%3E-for-Rotation"],[138,"impl-From%3CRotation%3E-for-Euler"],[139,"impl-From%3CUnit%3CQuaternion%3CT%3E%3E%3E-for-Euler"],[142,"impl-From%3CUnit%3CQuaternion%3CT%3E%3E%3E-for-Quaternion"],[143,"impl-From%3CRotation%3E-for-Quaternion"],[144,"impl-From%3CUnit%3CQuaternion%3CT%3E%3E%3E-for-AxisAngle"],[146,"impl-From%3CRotation%3E-for-AxisAngle"],[148,"impl-From%3CUnit%3CQuaternion%3CT%3E%3E%3E-for-RotationMatrix"],[149,"impl-From%3CRotation%3E-for-RotationMatrix"],[150,"impl-From%3CUnit%3CQuaternion%3CT%3E%3E%3E-for-Rodrigues"],[152,"impl-From%3CRotation%3E-for-Rodrigues"],[158,"impl-From%3CTransform%3E-for-MaybeTransform"],[159,"impl-From%3CRotation%3E-for-MaybeTransform"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
